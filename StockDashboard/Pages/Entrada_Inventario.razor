@page "/Registro"

@using StockDto;
@using CurrieTechnologies.Razor.SweetAlert2;
@using StockDashboard.Services;
@using StockDashboard.Services.Interfaces;

@inject SweetAlertService Swal;
@inject IProductInput productInput;

<h3 class="text-center mb-4" style="color: #6c757d;">Entrada Inventario</h3>

<a class="btn btn-soft-success mb-3 highlight-btn" href="RegistroProductos" style="
    margin: 0 auto 20px;
    background-color: #28a745;
    color: #fff;
    font-size: 1rem;
    font-weight: bold;
    padding: 8px 16px;
    border: none;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, background-color 0.3s ease;">
    Registro Producto
</a>

<table class="table table-striped table-hover" style="border-radius: 10px; overflow: hidden;">
    <thead class="bg-primary text-white">
        <tr>
            <th>Código</th>
            <th>Nombre del producto</th>
            <th>Categoría</th>
            <th>Descripción</th>
            <th>Fecha de entrada</th>
            <th>Cantidad</th>
            <th>Precio</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (listaProducto == null || !listaProducto.Any())
        {
            <!-- Spinner de carga cuando no hay productos -->
            <tr>
                <td colspan="8" class="text-center">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Cargando...</span>
                        </div>
                    </div>
                    <p style="color: #9e9e9e;">Cargando productos...</p>
                </td>
            </tr>
        }
        else
        {
            @foreach (var item in listaProducto)
            {
                <tr>
                    <td>@item.Product_Id</td>
                    <td>@item.Name_Product</td>
                    <td>@item.Name_Category</td>
                    <td>@item.Description</td>
                    <td>@item.OperationDate?.ToString("dd/MM/yyyy")</td>
                    <td>@item.Stock</td>
                    <td>$@item.Price</td>
                    <td>
                        <a class="btn btn-outline-soft-success btn-sm me-2 action-btn" href="RegistroProductos/@item.Product_Id" aria-label="Editar producto">
                            <i class="bi bi-pencil-fill"></i>
                        </a>

                        <button type="button" class="btn btn-outline-soft-danger btn-sm action-btn" @onclick="(() => Delete(item.Product_Id))" aria-label="Eliminar producto">
                            <i class="bi bi-trash-fill"></i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@code {
    List<ProductInput_DTO>? listaProducto = null;

    protected override async Task OnInitializedAsync()
    {
        listaProducto = await productInput.GetAsync();
    }

    private async Task Delete(int productId)
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar Producto",
                Text = "Desea eliminar el producto",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (result.IsConfirmed)
        {
            var delete = await productInput.DeleteAsync(productId);

            if (delete == 1)
                listaProducto = listaProducto.FindAll(e => e.Product_Id != e.Product_Id);
        }
    }
}
