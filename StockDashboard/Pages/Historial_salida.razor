@page "/Historialsalida"

@using StockDto;
@using StockDashboard.Services;
@using StockDashboard.Services.Interfaces;

@inject IProductSales productSales;

<h3 class="text-center mb-4" style="color: #6c757d;">Historial de Salidas</h3>

<a class="btn highlight-btn mb-3" href="RegistroSalidas"
   style="
    margin: 0 auto 20px;
    background-color: #28a745;
    color: #fff;
    font-size: 1rem;
    font-weight: bold;
    padding: 8px 16px;
    border: none;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, background-color 0.3s ease;">
    Registro Salida
</a>

<!-- Aquí va el spinner de carga -->
 <!-- Si los datos ya están cargados, mostramos la tabla -->
    <table class="table table-striped table-hover" style="border-radius: 10px; overflow: hidden;">
        <thead class="bg-primary text-white">
            <tr>
            <th>Código</th>
            <th>Nombre del cliente</th>
            <th>Nombre del producto</th>
            <th>Fecha de salida</th>
            <th>Cantidad de salida</th>
            <th>Precio total</th>
            </tr>
        </thead>
        <tbody>
        @if (listaProducto == null)
        {
        <tr>
            <td colspan="8" class="text-center">
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                </div>
                <p style="color: #9e9e9e;">Cargando productos...</p>
            </td>
        </tr>

        }
         else
            {
                @foreach (var item in listaProducto)
                {
                    <tr>
                        <td>@item.Product_Id</td>
                        <td>@item.CustomerName</td>
                        <td>@item.Name_Product</td>
                        <td>@item.SaleDate?.ToString("dd/MM/yyyy")</td>
                        <td>@item.Quantity</td>
                        <td>$@item.TotalPrice</td>
                    </tr>
                }
            }
        </tbody>
    </table>


@code {
    List<ProductSale_DTO>? listaProducto = null;

    protected override async Task OnInitializedAsync()
    {
        // Simulamos la carga de los datos (o en tu caso, llamamos a la API para obtener los datos)
        listaProducto = await productSales.GetAsync();
    }
}
